peer {
    privateKey = "AFF6A83FEFFF6FF0C9F6FFFE41F6FF10D9FFFF3F41FFCFBF41F6FF90DFFFFF91"
    port = 5050
  # Boot node list
  # Use to connect to specific nodes
    discovery {
        enabled = false
    }
    active = [{
        url = "enode://aaef01ee73aeff8b6a406db652c8b5a4dd805bf0ae957af09d6e49acb503af64240081cdae913cff718f0495640ed6eb5a5d6111c0c0b8e00dc005a1c3f41241@54.211.2.25:5050"
    },{
        url = "enode://648710d9e2b64524929efb666ae43d2a1c8b001ada6d7c26cd3f6f1419696d850630c901a6859fb438200c06dd34cf956844f48816ce087053bd3fa67d642a1d@3.83.90.210:5050"
    }]
}

wire {
    simulatedDelay = 500
}
miner {
    server {
        enabled = true
        skipPowValidation = true
    }

    client {
        enabled = true
        delayBetweenBlocks = 1 second
        timedMine = true
        medianBlockTime = "10 seconds"
    }


    # this is a secret passphrase that is used to derive the address where the miner gets the reward.
    # please note this is stored in a local wallet and not recommended for production.
    coinbase.secret = miner1
}

rpc {
    providers {
        web {
            cors = "*"
        }
    }
}

transaction {
    accountTxRateLimit {
        enabled = false
    }
}

txLoad {
    enabled = true

    # Desired block gas limit. Set together with forcegaslimit=true
    # Or rely on root-level targetgaslimit
    blockTargetGas = 30000000

    # Primary transaction gas to attempt per block (e.g., 9M)
    primaryTxGas = 27000000

    # Profile: intrinsic | cpu | writes | reads | mixed
    profile = "writes"

    # Optional deterministic seed for sender account
    senderSeed = "miner1"
}

targetgaslimit = 90000000
forcegaslimit = true
