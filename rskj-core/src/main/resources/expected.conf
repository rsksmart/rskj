blockchain = {
    config = {
        name = <name>
        verify = <verify>
        hardforkActivationHeights = {
            genesis = <height>
            bahamas = <height>
            afterBridgeSync = <height>
            orchid = <height>
            orchid060 = <height>
            wasabi100 = <height>
            papyrus200 = <height>
            twoToThree = <height>
            iris300 = <height>
            hop400 = <height>
            hop401 = <height>
            fingerroot500 = <height>
            arrowhead600 = <height>
            lovell700 = <height>
        }
        consensusRules = {
             areBridgeTxsPaid = <hardforkName>
             rskip85 = <hardforkName>
             rskip87 = <hardforkName>
             rskip88 = <hardforkName>
             rskip89 = <hardforkName>
             rskip90 = <hardforkName>
             rskip91 = <hardforkName>
             rskip92 = <hardforkName>
             rskip97 = <hardforkName>
             rskip98 = <hardforkName>
             rskip103 = <hardforkName>
             rskip106 = <hardforkName>
             rskip110 = <hardforkName>
             rskip119 = <hardforkName>
             rskip120 = <hardforkName>
             rskip122 = <hardforkName>
             rskip123 = <hardforkName>
             rskip124 = <hardforkName>
             rskip125 = <hardforkName>
             rskip126 = <hardforkName>
             rskip132 = <hardforkName>
             rskip134 = <hardforkName>
             rskip136 = <hardforkName>
             rskip137 = <hardforkName>
             rskip140 = <hardforkName>
             rskip143 = <hardforkName>
             rskip146 = <hardforkName>
             rskip150 = <hardforkName>
             rskip151 = <hardforkName>
             rskip152 = <hardforkName>
             rskip156 = <hardforkName>
             rskipUMM = <hardforkName>
             rskip153 = <hardforkName>
             rskip169 = <hardforkName>
             rskip170 = <hardforkName>
             rskip171 = <hardforkName>
             rskip174 = <hardforkName>
             rskip176 = <hardforkName>
             rskip179 = <hardforkName>
             rskip180 = <hardforkName>
             rskip181 = <hardforkName>
             rskip185 = <hardforkName>
             rskip186 = <hardforkName>
             rskip191 = <hardforkName>
             rskip197 = <hardforkName>
             rskip199 = <hardforkName>
             rskip200 = <hardforkName>
             rskip201 = <hardforkName>
             rskip203 = <hardforkName>
             rskip218 = <hardforkName>
             rskip219 = <hardforkName>
             rskip220 = <hardforkName>
             rskip252 = <hardforkName>
             rskip271 = <hardforkName>
             rskip284 = <hardforkName>
             rskip290 = <hardforkName>
             rskip293 = <hardforkName>
             rskip294 = <hardforkName>
             rskip297 = <hardforkName>
             rskip326 = <hardforkName>
             rskip353 = <hardforkName>
             rskip357 = <hardforkName>
             rskip374 = <hardforkName>
             rskip375 = <hardforkName>
             rskip376 = <hardforkName>
             rskip377 = <hardforkName>
             rskip379 = <hardforkName>
             rskip383 = <hardforkName>
             rskip385 = <hardforkName>
             rskip398 = <hardforkName>
             rskip400 = <hardforkName>
             rskip412 = <hardforkName>
             rskip415 = <hardforkName>
             rskip417 = <hardforkName>
             rskip428 = <hardforkName>
         }
    }
    gc = {
        enabled = <enabled>
        epochs = <epochs>
        blocksPerEpoch = <blocksPerEpoch>
    }
    flushNumberOfBlocks = <int>
}

peer = {
    active = [
        {
            url = <url>
            ip = <ip>
            port = <port>
            nodeId = <id>
            nodeName = <name>
        }
    ]
    trusted = [
        {
            nodeId = <id>
            ip = <ip>
        }
    ]
    connection.timeout = <timeout>
    channel.read.timeout = <timeout>
    p2p = {
        framing.maxSize = <maxSize>
        eip8 = <eip8>
        pingInterval = <pingInterval>
        version = <version>
    }
    maxActivePeers = <maxActivePeers>
    filter = {
        maxConnections = <maxConnections>
        networkCidr = <networkCidr>
    }
    discovery = {
        enabled = <enabled>
        ip.list = [<ip>]
        msg.timeout = <long>
        refresh.period = <long>
        allowMultipleConnectionsPerHostPort = <bool>
        maxBootRetries = <long>
        bucketSize = <number>
        usePeersFromLastSession = <boolean>
    }
    port = <port>
    networkId = <networkId>
    capabilities = [<capabilities>]
    privateKey = <privateKey>
    fastBlockPropagation = <bool>
    bannedPeerIPs = []
    bannedPeerIDs = []
    bannedMiners = []
    messageQueue.maxSizePerPeer = <maxSize>
}
genesis = <genesis>
genesis_constants.federationPublicKeys = []

database = {
    dir = <dir>
    import = {
        url = <url>
        trusted-keys = [<trusted-key>]
        enabled = <bool>
    }
    reset = <bool>
}
hello.phrase = <phrase>
wallet = {
    enabled = <enabled>
    accounts = [ {
        privateKey = <privateKey>
    }]
}
miner = {
    gasUnitInDollars = <double>
    minGasPrice = <minGasPrice>
    server = {
        enabled = <enabled>
        isFixedClock = <isFixedClock>
        workSubmissionRateLimitInMills = <long>
        updateWorkOnNewTransaction = <bool>
    }
    client = {
        enabled = <enabled>
        autoMine = <autoMine>
        delayBetweenBlocks = <delayBetweenBlocks>
        delayBetweenRefreshes = <delayBetweenRefreshes>
    }
    coinbase.secret = <secret>
    reward.address = <address>
    gasUnitInDollars = <double>
    minFeesNotifyInDollars = <double>
}
database = {
    reset = <reset>
    import = {
        enabled = <enabled>
        trusted-keys = [<trusted-key>]
    }
}
bind_address = <bind_address>
public = {
    ip = <ip>
    ipCheckService = <ipCheckService>
}
transaction = {
    outdated = {
        threshold = <threshold>
        timeout = <timeout>
    }
    gasPriceCalculatorType = <gasPriceCalculatorType>
    gasPriceBump = <gasPriceBump>
    accountSlots = <numOfAccountSlots>
    accountTxRateLimit = {
        enabled = <bool>
        cleanerPeriod = <period>
    }
}
dump = {
    full = <full>
    dir = <dir>
    block = <block>
    style = <style>
    clean.on.restart = <restart>
}
vm = {
    executionStackSize = <executionStackSize>
    structured = {
        trace = <trace>
        traceOptions = <traceOptions>
        dir = <dir>
        compressed = <compressed>
        initStorageLimit = <initStorageLimit>
    }
}
keyvalue.datasource = <datasource>
sync = {
    enabled = <enabled>
    heartBeat.enabled = <enabled>
    max.hashes.ask = <ask>
    peer.count = <count>
    expectedPeers = <expectedPeers>
    timeoutWaitingPeers = <timeoutWaitingPeers>
    timeoutWaitingRequest = <timeoutWaitingRequest>
    expirationTimePeerStatus = <expirationTimePeerStatus>
    maxSkeletonChunks = <maxSkeletonChunks>
    maxRequestedBodies = <maxRequestedBodies>
    longSyncLimit = <longSyncLimit>
    chunkSize = <chunkSize>
    version = <version>
    waitForSync = <bool>
    topBest = <percentage number>
}
rpc = {
    callGasCap =  <number>
    timeout = <number>
    maxResponseSize = <number>
    gasPriceMultiplier = <gasPriceMultiplier>
    providers = {
        web = {
            cors = <cors>
            max_batch_requests_size = <number>
            http = {
                enabled = <enabled>
                bind_address = <bind_address>
                hosts = []
                port = <port>
                linger_time = <linger_time>
                max_aggregated_frame_size = <frame_size_bytes>
            }
            ws = {
                enabled = <enabled>
                bind_address = <bind_address>
                port = <port>
                server_write_timeout_seconds = <timeout>
                max_aggregated_frame_size = <frame_size_bytes>
                max_frame_size = <frame_size_bytes>
            }
        }
    }
    modules = {
        <fallback> {
            version = <string>
            enabled = <enabled>
            timeout = <number>
            methods = {
                enabled = [<string>]
                disabled = [<string>]
                timeout = {
                    # <method> = <number>
                }
            }
        }
    }
    skipRemasc: <enabled>
    zeroSignatureIfRemasc = <enabled>
    gasEstimationCap = <gas>
    logs = {
        maxBlocksToQuery = <number>
        maxLogsToReturn = <number>
    }
}
wire = {
    protocol = <protocol>
}
solc.path = <path>
scoring = {
    nodes = {
        number = <number>
        duration = <duration>
        increment = <increment>
        maximum = <maximum>
    }
    addresses = {
        duration = <duration>
        increment = <increment>
        maximum = <maximum>
    }
    punishmentEnabled = <bool>
    summary = {
        enabled = <bool>
        time = <number>
    }
}
cache = {
  states = {
    max-elements = <max-elements>
    persist-snapshot = <bool>
  },
  stateRoots = {
    max-elements = <max-elements>
  },
  receipts {
    max-elements = <max-elements>
  },
  blooms {
    max-elements = <max-elements>
    persist-snapshot = <bool>
  },
  btcBlockStore {
    depth = <depth-elements>
    size = <cache-max-elements>
  }
}

crypto = {
    library = <bc-or-native>
}

GitHubTests.VMTest.loadLocal = <bool>
messages.recorder = {
    enabled = <bool>
    commands = [<command>]
}
targetgaslimit = <long>
forcegaslimit = <bool>

system.printInfo = <bool>

blooms = {
  blocks = <noblocks>
  service = <bool>
  confirmations = <noblocks>
}
