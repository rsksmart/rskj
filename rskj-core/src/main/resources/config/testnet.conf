blockchain.config {
    name = testnet
    hardforkActivationHeights = {
        bahamas = 0,
        afterBridgeSync = 114000,
        orchid = 0,
        orchid060 = 0,
        wasabi100 = 0,
        twoToThree = 504000,
        papyrus200 = 863000
    },
    consensusRules = {
        rskip97 = -1, # disable orchid difficulty drop
        rskip132 = 43550 # enable recalculted receive headers cost
    }
}

peer {

    discovery = {

        # if peer discovery is off
        # the peer window will show
        # only what retrieved by active
        # peer [true/false]
        enabled = true

        # List of the peers to start
        # the search of the online peers
        # values: [ip:port]
        ip.list = [
            "bootstrap01.testnet.rsk.co:50505",
            "bootstrap02.testnet.rsk.co:50505",
            "bootstrap03.testnet.rsk.co:50505",
            "bootstrap04.testnet.rsk.co:50505",
            "bootstrap05.testnet.rsk.co:50505",
            "bootstrap06.testnet.rsk.co:50505"
        ]
    }

    # Port for server to listen for incoming connections
    port = 50505

    # Network id
    networkId = 8100
}

# the folder resources/genesis contains several versions of genesis configuration according to the network the peer will run on
genesis = orchid-testnet.json

database {
    # place to save physical storage files
    dir = ${user.home}/.rsk/testnet/database
    import {
        url = "https://rsk-bootstrap-sync.s3.amazonaws.com/dbs/testnet/"
        trusted-keys = [
            "0413bf0bc799e0e7499568e369eeab43ae69ec41d8cd36104e67f81fe22b4796ba6bff7236c2af7295380f9ad484c8b7176318b54cab9edbf4586b264458339585",
            "04e65184c2e8ed0ede90d248fa0f38e2dfcc798e0b422110da4a0815c71a0ac948860a1da641a22db65d942ce9a57d28ad06cd7bcf546840cca2a3d494b9071233",
            "044dce98fc78f5b4badc0ae47a661dfd0fd1082ed091e37473d2917a21a2cad4c37ba769f80133015aae7a0a48be8748e75125328650dbb57d6437dd64c399c8db"
        ]
    }

}

# hello phrase will be included in the hello message of the peer
hello.phrase = TestNet

# account loaded when the node start.
wallet {
    enabled = false
    accounts = []
}
