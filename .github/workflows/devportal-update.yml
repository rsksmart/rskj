name: Update DevPortal Documentation

env:
  DEV_PORTAL_SCRIPT_PATH: ".github/workflows/scripts/devportal-update"

on:
  push:
    paths:
      - "docs/**"
    branches:
      - master

permissions: read-all

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'  # You can specify the Python version you prefer

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML
          chmod -R +x ${{ env.DEV_PORTAL_SCRIPT_PATH }}/process_docs.py

      - name: Extract version from gradle.properties
        run: |
          VERSION=$(tr -d "'\"" < rskj-core/src/main/resources/version.properties | cut -d = -f 2- | paste -sd - -)
          echo "RSK_VERSION=${VERSION}" >> $GITHUB_ENV

      # Step 1: Clone the DevPortal Repository
      - name: Clone DevPortal Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: rsksmart/devportal
          path: devportal
          token: ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}

      # Step 2: Create the local branch
      - name: Create branch for PR to update DevPortal
        env:
          GITHUB_TOKEN: ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}
        run: |
          cd devportal
          BRANCH_NAME="update-from-rskj-${{ env.RSK_VERSION }}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          git checkout  -b ${BRANCH_NAME} || git checkout ${BRANCH_NAME}
          cd ..

      # Step 3: Transform Each File and Copy to DevPortal Repository
      - name: Transform Files for DevPortal
        run: |
          mkdir -p transformed
          
          # Process other documentation files
          python ${{ env.DEV_PORTAL_SCRIPT_PATH }}/process_docs.py ${{ env.DEV_PORTAL_SCRIPT_PATH }}/doc_config.yaml

          # Copy processed files to devportal directory
          cp -R transformed/* devportal/docs/

      # Step 4: Commit and Push Changes to DevPortal Repository
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}
        run: |
          cd devportal
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs
          git commit -m "Automated update from rskj repository"
          git remote set-url origin https://x-access-token:${{ env.GITHUB_TOKEN }}@github.com/rsksmart/devportal.git
          echo "Pushing branch: ${{ env.BRANCH_NAME }}"
          git push -u  -f origin ${{ env.BRANCH_NAME }}

      # Step 5: Create a Pull Request in the DevPortal Repository
      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}
        run: |
          PR_RESPONSE=$(curl -L -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/rsksmart/devportal/pulls \
          -d '{
            "title": "Automated update of documentation for RSKj node - '"${{ env.BRANCH_NAME }}"'",
            "body": "This PR updates the Devportal documentation with the latest changes from the original repository.\n\nOriginal RSKj PR: https://github.com/rsksmart/rskj/pull/${{ github.event.pull_request.number }}",
            "head": "'"${{ env.BRANCH_NAME }}"'",
            "base": "main"
          }')
          
          echo "Pull request created successfully"
          echo "Response: $PR_RESPONSE"