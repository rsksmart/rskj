version: 2

jobs:
  build:
    docker:
      - image: openjdk:8-jdk
    environment:
      _JAVA_OPTIONS: "-Xmx3G -Xms2G"
      SONAR_VERSION: "3.0.3.778"
    steps:
      - checkout
      - run: apt update -y && apt install -y gnupg2
      - run: curl -sSL https://secchannel.rsk.co/release.asc | gpg2 --import -
      - run: gpg2 --verify SHA256SUMS.asc && sha256sum --check SHA256SUMS.asc
      - run: curl -OJL https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_VERSION-linux.zip
      - run: unzip sonar-scanner-cli-$SONAR_VERSION-linux.zip
      - run: ./configure.sh
      - run: ./gradlew --no-daemon dependencies
      - run: ./gradlew --no-daemon --stacktrace build
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - run: if [ ! -z $CI_PULL_REQUEST ]; then  export PULL_REQUEST=$(echo $CI_PULL_REQUEST | awk '{print substr($1,39)}') && ./sonar-scanner-$SONAR_VERSION-linux/bin/sonar-scanner -Dsonar.analysis.mode=preview -Dsonar.github.pullRequest=$PULL_REQUEST -Dsonar.github.repository=rsksmart/rskj -Dsonar.github.oauth=$GITHUB_ACCESS_TOKEN -Dsonar.host.url=$SONAR_HOST -Dsonar.login=$SONARQUBE_ACCESS_TOKEN -Dsonar.projectKey="co.rsk:rskJ" -Dsonar.sources="rskj-core/src/main/java,rskj-core/src/main/resources" -Dsonar.java.binaries="rskj-core/build/classes/java/main"; fi
